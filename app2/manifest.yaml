kind: Deployment
apiVersion: apps/v1
metadata:
  name: app2
  #these labels are deployment related labels
  labels:
    app: app2
    purpose: ingress
spec:
  #modify replicas based on your requirement
  replicas: 1
  selector:
    matchLabels:
      app: app2
      purpose: ingress
  # pod definition
  template:
    metadata:
      labels:
        app: app2
        purpose: ingress
    spec:
      containers:
      - name: app2
        image: lingadevops/app2:v1.0
---
apiVersion: v1
kind: Service
metadata:
  name: app2
spec:
  selector:
    app: app2
    purpose: ingress
  ports:
  - protocol: TCP
    port: 80 #service-port
    targetPort: 80 #target-port
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-app2
  annotations:
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    # alb.ingress.kubernetes.io/group.name: lingadevops
    #kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:730335449147:certificate/5e52a386-de7f-4c27-8d4e-15c1afabbc8e
    alb.ingress.kubernetes.io/listen-ports: '[ {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/group.name: expense-cluster   
spec:
  ingressClassName: alb
  rules:
  - host: "app2.lingaiah.online" #ALB Rule
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: app2 # ALB Target group
            port:
              number: 80

